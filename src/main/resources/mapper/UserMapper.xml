<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.saiyun.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.saiyun.model.User">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="icon_url" jdbcType="VARCHAR" property="iconUrl" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="trade_password" jdbcType="VARCHAR" property="tradePassword" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="timeout" jdbcType="TIMESTAMP" property="timeout" />
    <result column="createdate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="wechat" jdbcType="VARCHAR" property="wechat" />
    <result column="alipay" jdbcType="VARCHAR" property="alipay" />
    <result column="one_auth" jdbcType="CHAR" property="oneAuth" />
    <result column="two_auth" jdbcType="CHAR" property="twoAuth" />
    <result column="area_code" jdbcType="VARCHAR" property="areaCode" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="user_type" jdbcType="CHAR" property="userType" />
    <result column="bankcard"  property="bankcard" />
  </resultMap>


  <sql id="Base_Column_List">
    user_id, nickname, phone, icon_url, password, trade_password, state, token, timeout,
    createdate, wechat, alipay, one_auth, two_auth, area_code, email, user_type,bankcard
  </sql>
  <select id="selectByPrimaryKey"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="selectAll"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user
  </select>
  <select id="getOneByUserType"   resultMap="BaseResultMap">
    select
    user_id, nickname, phone, icon_url, password, trade_password, state, token, timeout,
    max(createdate), wechat, alipay, one_auth, two_auth, area_code, email, user_type,bankcard
    from t_user where user_type = #{userType}
  </select>
  <select id="selectOneByUser" parameterType="com.saiyun.model.User" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user
    <where>
      <if test="userId != null and userId != '' ">
        and user_id = #{userId}
      </if>
      <if test="nickname != null and nickname != '' ">
        and nickname = #{nickname}
      </if>
      <if test="phone != null and phone != '' ">
        and phone = #{phone}
      </if>
      <if test="iconUrl != null and iconUrl != '' ">
        and icon_url = #{iconUrl}
      </if>
      <if test="password != null and password != '' ">
        and password = #{password}
      </if>
      <if test="oneAuth != null and oneAuth != '' ">
        and one_auth = #{oneAuth}
      </if>
      <if test="twoAuth != null and twoAuth != '' ">
        and two_auth = #{twoAuth}
      </if>
      <if test="createdate != null and createdate != '' ">
        and createdate = #{createdate}
      </if>
      <if test="token != null and token != '' ">
        and token = #{token}
      </if>
      <if test="areaCode != null and areaCode != '' ">
        and area_code = #{areaCode}
      </if>
      <if test="email != null and email != '' ">
        and email = #{email}
      </if>
      <if test="userType != null and userType != '' ">
        and user_type = #{userType}
      </if>
      <if test="bankcard != null and bankcard != '' ">
        and bankcard = #{bankcard}
      </if>

    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_user
    where user_id = #{userId}
  </delete>
  <insert id="insert" parameterType="com.saiyun.model.User">
    insert into t_user (user_id, nickname, phone,
      icon_url, password, trade_password,
      state, token, timeout,
      createdate, wechat, alipay,
      one_auth, two_auth, area_code,
      email, user_type,bankcard)
    values (#{userId,jdbcType=BIGINT}, #{nickname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{iconUrl,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{tradePassword,jdbcType=VARCHAR},
      #{state}, #{token,jdbcType=VARCHAR}, #{timeout,jdbcType=TIMESTAMP},
      #{createdate,jdbcType=TIMESTAMP}, #{wechat,jdbcType=VARCHAR}, #{alipay,jdbcType=VARCHAR},
      #{oneAuth}, #{twoAuth}, #{areaCode,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{userType},#{bankcard})
  </insert>
  <insert id="insertSelective" parameterType="com.saiyun.model.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="iconUrl != null">
        icon_url,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="tradePassword != null">
        trade_password,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="timeout != null">
        timeout,
      </if>
      <if test="createdate != null">
        createdate,
      </if>
      <if test="wechat != null">
        wechat,
      </if>
      <if test="alipay != null">
        alipay,
      </if>
      <if test="oneAuth != null">
        one_auth,
      </if>
      <if test="twoAuth != null">
        two_auth,
      </if>
      <if test="areaCode != null">
        area_code,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="userType != null">
        user_type,
      </if>
       <if test="bankcard != null">
         bankcard,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="iconUrl != null">
        #{iconUrl,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="tradePassword != null">
        #{tradePassword,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="timeout != null">
        #{timeout,jdbcType=TIMESTAMP},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="wechat != null">
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="alipay != null">
        #{alipay,jdbcType=VARCHAR},
      </if>
      <if test="oneAuth != null">
        #{oneAuth},
      </if>
      <if test="twoAuth != null">
        #{twoAuth},
      </if>
      <if test="areaCode != null">
        #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType},
      </if>
       <if test="bankcard != null">
        #{bankcard},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.saiyun.model.User">
    update t_user
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="iconUrl != null">
        icon_url = #{iconUrl,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="tradePassword != null">
        trade_password = #{tradePassword,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="timeout != null">
        timeout = #{timeout,jdbcType=TIMESTAMP},
      </if>
      <if test="createdate != null">
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="wechat != null">
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="alipay != null">
        alipay = #{alipay,jdbcType=VARCHAR},
      </if>
      <if test="oneAuth != null">
        one_auth = #{oneAuth},
      </if>
      <if test="twoAuth != null">
        two_auth = #{twoAuth},
      </if>
      <if test="areaCode != null">
        area_code = #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType},
      </if>
      <if test="userType != null">
        bankcard = #{bankcard},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.saiyun.model.User">
    update t_user
    set nickname = #{nickname,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      icon_url = #{iconUrl,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      trade_password = #{tradePassword,jdbcType=VARCHAR},
      state = #{state},
      token = #{token,jdbcType=VARCHAR},
      timeout = #{timeout,jdbcType=TIMESTAMP},
      createdate = #{createdate,jdbcType=TIMESTAMP},
      wechat = #{wechat,jdbcType=VARCHAR},
      alipay = #{alipay,jdbcType=VARCHAR},
      one_auth = #{oneAuth},
      two_auth = #{twoAuth},
      area_code = #{areaCode,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      user_type = #{userType},
      bankcard = #{bankcard}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateTokenNull" parameterType="java.lang.String">
    update t_user
    set token = ''
    where token = #{token}
  </update>
</mapper>

